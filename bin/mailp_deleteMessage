#!/usr/bin/perl -w
# Copyright 2010 Sam Bisbee
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Takes an mbox and removes any e-mails from it that have all the provided
# key/value pairs in their header. All rules are matched, case sensitive, and
# accept Perl regular expressions.
#
# Exists with success if it deleted at least one e-mail, else exists with
# failure.

use strict;
use Mail::MboxParser;

$|++;

die $0 =~ /([^\/]+)$/, " <mbox> <header name> <header value> [<header name> <header value> [...]]\n\nTakes an mbox and removes any e-mails from it that have all the provided\nkey/value pairs in their header. All rules are matched, case sensitive, and\naccept Perl regular expressions.\n\nExample, $0 ./mbox.bkp to \".*someone\@example\\\.com.*\"\n\n" if @ARGV % 2 == 0 || @ARGV < 3;

my $mb = Mail::MboxParser->new($ARGV[0]);
my $found = 0;

while (my $msg = $mb->next_message) 
{
  my $matches = 0;

  for(my $i = 1; defined $ARGV[$i] && defined $ARGV[$i + 1]; $i += 2)
  {
    #Mail::MboxParser wants lower case header keys only
    my $val = $msg->header->{lc $ARGV[$i]};
    $matches++ if defined $val && $val =~ $ARGV[$i + 1];
  }

  if($matches == (@ARGV - 1) / 2) { $found++; }
  else { print "$msg\n\n"; }
}

exit 1 unless $found > 0;
